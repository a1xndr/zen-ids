#!/bin/bash

c="opmon_cfi_mode"
r="opmon_request_id_synch"
o="opmon_opcode_dump_enabled"
e="opmon_request_edge_enabled"
v="opmon_verbose"
b="opmon_cfi_bailout"

config="$PHP_HOME/conf.d/ext/opmon.ini"

function usage() {
  echo "opmon-config"
  echo "   -s show current config (after making changes)"
  echo "   -d dump the whole config file"
  echo "   -c <$c>"
  echo "   -r <$r>"
  echo "   -o <$o>"
  echo "   -e <$e>"
  echo "   -v <$v>"
  echo "   -b <$b>"
}

function add_expression() {
  var=$1
  val=$2

  sed -i -e "s/$var = [0-9]\+/$var = $val/" $config
}

[ "$1" == "--help" ] && usage && exit
[ -z "$PHP_HOME" ] && echo "This script requires variable \$PHP_HOME. Exiting now." && exit

while getopts "c:r:o:e:v:b:sd" option
do
  case $option in
    c) add_expression $c $OPTARG;;
    r) add_expression $r $OPTARG;;
    o) add_expression $o $OPTARG;;
    e) add_expression $e $OPTARG;;
    v) add_expression $v $OPTARG;;
    b) add_expression $b $OPTARG;;
    s) show=true;;
    d) dump=true;;
  esac
done
shift $(( $OPTIND-1 ))

if [ ! -z "$dump" ]
then
  cat $config
elif [ ! -z "$show" ]
then
  grep "$c" $config
  grep "$r" $config
  grep "$o" $config
  grep "$e" $config
  grep "$v" $config
  grep "$b" $config
fi
