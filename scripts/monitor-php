#!/bin/bash

function usage() {
  echo "monitor-php [ -a <static-analysis-name> ] [ -d (debug) ]"
}

[ -z "$PHP_HOME" ] && \
  echo "This script requires the environment variable PHP_HOME." \
       "Exiting now." && \
  exit

[ -z "$ZEN_IDS_DATASETS" ] && \
  echo "This script requires the environment variable ZEN_IDS_DATASETS." \
       "Exiting now." && \
  exit

[ "$1" == "--help" ] && usage && exit

php_bin="php"

while getopts "ls:do:wk:D:q:" option
do
  case $option in
    l) php_options="$php_options -l";; # standard PHP lint mode
    D) php_options="$php_options -D";  # static dataflow analysis
       php_bin="php-cgi";
       export OPMON_OPCODE_DUMP="$OPTARG";; # cannot set by variable in the invocation command
    s) static_analysis="$OPTARG";
       export OPMON_STATIC_ANALYSIS="$OPTARG";;
    d) debug=true;;
    w) php_bin="php-cgi";;
    k) php_options="$php_options -k $OPTARG";; # experimental fork mode
    q) export QUERY_STRING="$OPTARG";;
  esac
done

shift $(( $OPTIND - 1 ))

script=$1
shift

[ ! -f "$script" ] && echo "Cannot find target script '$script'. Exiting now." && exit

export SCRIPT_FILENAME="$script" # only for php-cgi (otherwise ignored)
export PATH_TRANSLATED="$script"

if [ ! -z "$debug" ]
then
  gdb -q --args $PHP_HOME/bin/$php_bin $php_options $script $@
  exit
fi

rundir=$ZEN_IDS_DATASETS/runs
mkdir -p $rundir

logdir=$PHP_HOME/logs
mkdir -p $logdir
log=$(mktemp $logdir/monitor-XXXXX.log)

echo "Logging to intermediate file $log"

[ ! -f "$script" ] && echo "Script '$script' does not exist! Exiting now." && exit

echo "Monitor PHP on script ["$(basename "$script")"]" > $log
$PHP_HOME/bin/$php_bin $php_options $script $@ &>> $log

if [ -z "$static_analysis" ]
then
  script_basename=$(basename $script)
  script_basename=${script_basename%.*}
  run_output_dir=$rundir/$script_basename
  mkdir -p "$run_output_dir"
  run_data_dir=$(ls -td $run_output_dir/* 2> /dev/null | head -1)
  [ -z "$run_data_dir" ] && echo "Cannot find any directory in '$run_output_dir'. Exiting now." && exit
else
  script_basename=$(echo $script | sed "s/\//_/g")
  script_basename=${script_basename%.*}
  run_data_dir=$rundir/$static_analysis
fi
run_log="$run_data_dir/$script_basename.log"

mv $log $run_log
echo "    Output: $run_log"

run_catalog=$ZEN_IDS_DATASETS/runs.tab
echo "$run_log" >> $run_catalog

