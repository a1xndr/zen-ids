The current operation is referenced as OPLINE, which is a macro for
EX(opline), where opline is a zend_op, which is defined in
zend_compile.h. This can be imported. 

Print opcode names using zend_get_opcode_name(), which can be imported.

The best event hook seems to be zend_vm_execute.h:execute_ex().

-------------

To build php:

1. ./buildconf
2. ./configure
      --prefix=/stash/script-safe/php
      --enable-zend-monitor
      --with-config-file-path=/stash/script-safe/php/conf.d
      --with-config-file-scan-dir=/stash/script-safe/php/conf.d/ext
3. make -j3
4. make install

Seems to require bison 2.7, which is not available on 14.04. This
nonsense corrects it:

wget http://launchpadlibrarian.net/140087283/libbison-dev_2.7.1.dfsg-1_amd64.deb
wget http://launchpadlibrarian.net/140087282/bison_2.7.1.dfsg-1_amd64.deb
dpkg -i libbison-dev_2.7.1.dfsg-1_amd64.deb
dpkg -i bison_2.7.1.dfsg-1_amd64.deb

--------------

An extension is defined as struct zend_extension in
Zend/zend_extension.h. There are pointers to various functions for
startup, shutdown, activate, op_array_handler, etc. These are called
with:

  - dispatcher functions zend_list_apply()
  - zend_llist_apply_with_argument() 
  - zend_llist_apply_with_del()

Extensions are initialized in main/main.c:php_module_startup().

----------------

Created extension "opcode-monitor". Build with:

  > cd ext/opmon
  > ../../scripts/phpize
  > ./configure 
       --enable-opcode-monitor 
       --prefix=/stash/script-safe/php
       --with-php-config=/stash/script-safe/php/bin/php-config
  > make -j3

-----------------

The opcode at the currently executing line is generally referred to as
`OPLINE` or `opline` and it is a zend_op. The zend_op and its constants
are defined in Zend/zend_compile.h. A zend_op has two operands of type
znode_op whose type is specified in a separate field, and an
extended_type, the domains of which are also defined in zend_compile.h.
The zend_op.result is also a znode_op with separate result_type.

  // znode_op types:
  #define IS_CONST  (1<<0)
  #define IS_TMP_VAR  (1<<1)
  #define IS_VAR    (1<<2)
  #define IS_UNUSED (1<<3)  /* Unused variable */
  #define IS_CV   (1<<4)  /* Compiled variable */


The name of an included or required script is in the op1.zv, which is a
`zval` defined in Zend/zend_types.h.

Opcodes are defined in Zend/zend_vm_opcodes.h.

